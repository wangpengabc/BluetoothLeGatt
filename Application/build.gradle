
buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    mavenCentral()
}

dependencies {


        implementation "com.android.support:support-v4:28.0.0"
        implementation "com.android.support:support-v13:28.0.0"
        implementation "com.android.support:cardview-v7:28.0.0"
        implementation "com.android.support:appcompat-v7:28.0.0"

        implementation 'com.github.lecho:hellocharts-library:1.5.8@aar'

        implementation 'commons-net:commons-net:3.8.0'

        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation 'org.apache.commons:commons-lang3:3.0'
        // https://mvnrepository.com/artifact/commons-codec/commons-codec
        implementation 'commons-codec:commons-codec:1.9'



    // 3. Android - Use Guava in your implementation only:
//        implementation("com.google.guava:guava:31.1-android")


}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdk 30

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }
    buildToolsVersion '30.0.2'

}
